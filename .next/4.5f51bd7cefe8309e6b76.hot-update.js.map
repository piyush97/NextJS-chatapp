{"version":3,"file":"4.5f51bd7cefe8309e6b76.hot-update.js","sources":["webpack:///components/Chat.js"],"sourcesContent":[" import React, { Component, Fragment } from 'react';\n    import axios from 'axios';\n    import Pusher from 'pusher-js';\n        import ChatMessage from './ChatMessage';\n const SAD_EMOJI = [55357, 56864];\n    const HAPPY_EMOJI = [55357, 56832];\n    const NEUTRAL_EMOJI = [55357, 56848];\n    class Chat extends Component {\n    \n      state = { chats: [] }\n      \n      componentDidMount() {\n      \n        this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n          cluster: process.env.PUSHER_APP_CLUSTER,\n          encrypted: true\n        });\n        \n        this.channel = this.pusher.subscribe('chat-room');\n        \n        this.channel.bind('new-message', ({ chat = null }) => {\n          const { chats } = this.state;\n          chat && chats.push(chat);\n          this.setState({ chats });\n        });\n        \n        this.pusher.connection.bind('connected', () => {\n          axios.post('/messages')\n            .then(response => {\n              const chats = response.data.messages;\n              this.setState({ chats });\n            });\n        });\n        \n      }\n      \n      componentWillUnmount() {\n        this.pusher.disconnect();\n      }\n       handleKeyUp = evt => {\n      const value = evt.target.value;\n      \n      if (evt.keyCode === 13 && !evt.shiftKey) {\n        const { activeUser: user } = this.props;\n        const chat = { user, message: value, timestamp: +new Date };\n        \n        evt.target.value = '';\n        axios.post('/message', chat);\n      }\n    }\n    \n    render() {\n return (this.props.activeUser && <Fragment>\n      <div className=\"border-bottom border-gray w-100 d-flex align-items-center bg-white\" style={{ height: 90 }}>\n        <h2 className=\"text-dark mb-0 mx-4 px-2\">{this.props.activeUser}</h2>\n      </div>\n      <div className=\"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\" style={{ height: 'calc(100% - 180px)', overflowY: 'scroll' }}>\n        {this.state.chats.map((chat, index) => {\n          const previous = Math.max(0, index - 1);\n          const previousChat = this.state.chats[previous];\n          const position = chat.user === this.props.activeUser ? \"right\" : \"left\";\n\n          const isFirst = previous === index;\n          const inSequence = chat.user === previousChat.user;\n          const hasDelay = Math.ceil((chat.timestamp - previousChat.timestamp) / (1000 * 60)) > 1;\n\n          const mood = chat.sentiment > 0 ? HAPPY_EMOJI : (chat.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI);\n\n          return (\n            <Fragment key={index}>\n              { (isFirst || !inSequence || hasDelay) && (\n                <div className={`d-block w-100 font-weight-bold text-dark mt-4 pb-1 px-1 text-${position}`} style={{ fontSize: '0.9rem' }}>\n                  <span className=\"d-block\" style={{ fontSize: '1.6rem' }}>{String.fromCodePoint(...mood)}</span>\n                  <span>{chat.user || 'Anonymous'}</span>\n                </div>\n              ) }\n              <ChatMessage message={chat.message} position={position} />\n            </Fragment>\n          );\n        })}\n      </div>\n      <div className=\"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\" style={{ minHeight: 90 }}>\n        <textarea className=\"form-control px-3 py-2\" onKeyUp={this.handleKeyUp} placeholder=\"Enter a chat message\" style={{ resize: 'none' }}></textarea>\n      </div>\n    </Fragment> )\n  }\n\n};\n\nexport default Chat;\n    \n\n\n\n// WEBPACK FOOTER //\n// components/Chat.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;;;;;AA8BA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;;;;AAtCA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;;;AAasourceRoot":""}